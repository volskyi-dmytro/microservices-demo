server:
  port: 8080

spring:
  application:
    name: "accounts"
  profiles:
    active: "prod"
  datasource:
    url: jdbc:mysql://micro-sql.local:3306/accountsdb
    username: root
    password: root
  sql:
   init:
    mode: always

  jpa:
    show-sql: true

  config:
    import: "optional:configserver:http://configserver:8071/"
  cloud:
    openfeign:
      circuitbreaker:
        enabled: true

eureka:
  instance:
    prefer-ip-address: true
  client:
    fetch-registry: true
    register-with-eureka: true
    service-url:
      defaultZone: http://eurekaserver:8070/eureka

info:
  app:
    name: "accounts"
    description: "StBank Accounts Microservice"
    version: "1.0.0"

management:
  endpoints:
    web:
      exposure:
        include: '*'
  info:
    env:
      enabled: true
  health:
    readiness-state:
      enabled: true
    liveness-state:
      enabled: true
  endpoint:
    health:
      probes:
        enabled: true
    shutdown:
      access: unrestricted
    prometheus:
      access: unrestricted
  prometheus:
    metrics:
      export:
        enabled: true
  metrics:
    tags:
      application: ${spring.application.name}

logging:
  level:
    com:
      stpunk47:
        accounts: DEBUG
  pattern:
    level: "%5p [${spring.application.name},%X{traceId},%X{spanId}]"

resilience4j.circuitbreaker:
  configs:
    default:
      slidingWindowSize: 10
      permittedNumberOfCallsInHalfOpenState: 2
      failureRateThreshold: 50
      waitDurationInOpenState: 10s

resilience4j.retry:
  configs:
    default:
      maxAttempts: 3
      waitDuration: 1s
      enable-exponential-backoff: true
      exponential-backoff-multiplier: 2

resilience4j.ratelimiter:
  configs:
    default:
      timeoutDuration: 1s
      limitRefreshPeriod: 5s
      limitForPeriod: 1